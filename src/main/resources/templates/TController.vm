#set($classInfo=$collection.classInfo)
#set($tableInfo=$collection.tableInfo)
package ${classInfo.packageName}.controller;

import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import ${classInfo.classFullName};
import ${classInfo.packageName}.service.${classInfo.className}Service;
import xframework.core.pagenation.Page;
import xframework.core.utils.ObjectToMapUtil;

@RestController
public class ${classInfo.className}Controller {
	
	@Autowired
	private ${classInfo.className}Service ${classInfo.handleName}Service;
	
	// 按主键查询
	@RequestMapping("/${classInfo.handleName}/getByKey")
	public ${classInfo.className} getByKey(@RequestBody Map<String, Object> keyMap) {
		return ${classInfo.handleName}Service.getByKey(keyMap);
	}
	
	// 通用条件查询
	@RequestMapping("/${classInfo.handleName}/query")
	public List<${classInfo.className}> query(@RequestBody(required = false) ${classInfo.className} ${classInfo.handleName}) {
		Map<String, Object> queryMap = ObjectToMapUtil.convertObjectToMap(${classInfo.handleName});
		return ${classInfo.handleName}Service.query(queryMap);
	}

	// 分页查询
	@RequestMapping("/${classInfo.handleName}/pageQuery")
	public Page<${classInfo.className}> pageQuery(@RequestBody Page<${classInfo.className}> page) {
		return ${classInfo.handleName}Service.pageQuery(page);
	}

	// 单条保存
	@RequestMapping("/${classInfo.handleName}/save")
	public void save(@RequestBody ${classInfo.className} ${classInfo.handleName}) {
		${classInfo.handleName}Service.save(${classInfo.handleName});
	}
	
	// 批量保存
	@RequestMapping("/${classInfo.handleName}/saveBatch")
	public void saveBatch(@RequestBody List<${classInfo.className}> ${classInfo.handleName}List) {
		${classInfo.handleName}Service.saveBatch(${classInfo.handleName}List);
	}
	
#if( $tableInfo.updateAble )
	// 按主键更新全部字段
	@RequestMapping("/${classInfo.handleName}/update")
	public void update(@RequestBody ${classInfo.className} ${classInfo.handleName}) {
		${classInfo.handleName}Service.update(${classInfo.handleName});
	}
	
	// 按主键更新非空字段
	@RequestMapping("/${classInfo.handleName}/updateNotEmpty")
	public void updateNotEmpty(@RequestBody ${classInfo.className} ${classInfo.handleName}) {
		${classInfo.handleName}Service.updateNotEmpty(${classInfo.handleName});
	}
	
	// 按主键删除
	@RequestMapping("/${classInfo.handleName}/deleteByKey")
	public void deleteByKey(@RequestBody Map<String, Object> keyMap) {
		${classInfo.handleName}Service.deleteByKey(keyMap);
	}
#end
}