spring.datasource.url=jdbc:mysql://120.78.174.183:3306/bmp_sysmanage?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#项目启动端口。可修改
server.port=80

#thymeleaf start
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#解决springboot返回日期时间戳问题
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#静态文件存放扫描位置
spring.resources.static-locations=classpath:/static/,classpath:/views/,classpath:/META-INF/resources/webjars/,classpath:/META-INF/resources/

#mybatis配置
#Mapper.xml所在的位置
mybatis.mapper-locations=classpath*:com/firstTry/Adventure/mapper/*Mapper.xml
#entity扫描的包名
mybatis.type-aliases-package=com.firstTry.Adventure.entity

#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf end

application.workerId=1
application.datacenterId=1
#文件上传下载限制
spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=10Mb

#test-jdbc-primary
#spring.datasource.primary.url=jdbc:mysql://localhost:3306/test
#spring.datasource.primary.username=root
#spring.datasource.primary.password=xxbl1709
#spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver

#test-jdbc-secondary
#spring.datasource.secondary.url=jdbc:mysql://120.78.130.42:3306/my_test?characterEncoding=utf8&useSSL=false
#spring.datasource.secondary.username=Roger
#spring.datasource.secondary.password=Roger
#spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=120.78.174.183
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=586543
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000

###########################################################################
#关于使用docker启动该项目。                                                                                                   #
#首先使用ftp工具将该项目提交至服务器,然后进入项目目录.                          #
#运行 mvn package docker:build    进行构建镜像                                                             #
#构建完成后运行   docker images   查看自己构建好的镜像                                                   #
#使用       docker run -p 端口:端口 -t  镜像名称--->(示例)adventure/docker       #
#启动完成之后我们使用   docker ps  查看正在运行的镜像：                                                   #
###########################################################################
